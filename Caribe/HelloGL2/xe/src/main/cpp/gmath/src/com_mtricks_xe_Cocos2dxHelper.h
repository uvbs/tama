#ifndef WIN32
/* DO NOT EDIT THIS FILE - it is machine generated */
#include <jni.h>
/* Header for class com_mtricks_xe_Cocos2dxHelper */

#ifndef _Included_com_mtricks_xe_Cocos2dxHelper
#define _Included_com_mtricks_xe_Cocos2dxHelper

typedef void (*EditTextCallback)(const char* pText, void* ctx);

#ifdef __cplusplus
extern "C" {
#endif
/*
 * Class:     com_mtricks_xe_Cocos2dxHelper
 * Method:    nativeSetApkPath
 * Signature: (Ljava/lang/String;)V
 */
JNIEXPORT void JNICALL Java_com_mtricks_xe_Cocos2dxHelper_nativeSetApkPath
  (JNIEnv *, jclass, jstring);

/*
 * Class:     com_mtricks_xe_Cocos2dxHelper
 * Method:    nativeSetExternalAssetPath
 * Signature: (Ljava/lang/String;)V
 */
JNIEXPORT void JNICALL Java_com_mtricks_xe_Cocos2dxHelper_nativeSetExternalAssetPath
  (JNIEnv *, jclass, jstring);

/*
 * Class:     com_mtricks_xe_Cocos2dxHelper
 * Method:    nativeSetEditTextDialogResult
 * Signature: ([B)V
 */
//JNIEXPORT void JNICALL Java_com_mtricks_xe_Cocos2dxHelper_nativeSetEditTextDialogResult
//  (JNIEnv *, jclass, jbyteArray);
//
JNIEXPORT void JNICALL Java_com_mtricks_xe_Cocos2dxHelper_nativeSetInternalResourcePath
(JNIEnv *env, jclass, jstring path);

extern const char * getApkPath();
	
    void showEditTextDialogJNI(const char* pszTitle,
							   const char* pszMessage,
							   int nInputMode,
							   int nInputFlag,
							   int nReturnType,
							   int nMaxLength,
							   EditTextCallback pfEditTextCallback,
							   void* ctx);

    void Java_com_mtricks_xe_Cocos2dxHelper_nativeSetEditTextDialogResult
	(JNIEnv * env, jobject obj, jbyteArray text);
	
#ifdef __cplusplus
}
#endif
#endif
#endif // not win32